import os
import re
import glob
import subprocess
from typing import List

def find_insecure_workflows(repo_path: str) -> List[str]:
    findings = []
    workflow_path = os.path.join(repo_path, ".github", "workflows")

    if not os.path.exists(workflow_path):
        return ["❌ No workflows found in this repository."]

    yml_files = glob.glob(os.path.join(workflow_path, "*.yml")) + \
                glob.glob(os.path.join(workflow_path, "*.yaml"))

    for file in yml_files:
        with open(file, "r", encoding="utf-8", errors="ignore") as f:
            content = f.read()
            filename = os.path.basename(file)
            if "pull_request_target" in content:
                findings.append(f"⚠️ {filename} uses pull_request_target (highly dangerous).")
            if re.search(r"run:\s*\$\{\{[^}]+\}\}", content):
                findings.append(f"⚠️ {filename} has dynamic run command using untrusted input.")
            if "on: pull_request" in content and "paths-ignore" not in content and "types:" not in content:
                findings.append(f"⚠️ {filename} triggers on pull_request without filters (broad surface).")

    if not findings:
        findings.append("✅ No obvious workflow injection issues found.")

    return findings
